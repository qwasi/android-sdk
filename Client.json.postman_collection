{
	"id": "75808674-9e2b-dd77-dea5-05d36feb5a94",
	"name": "Mojo JSON-RPC API Client",
	"description": "Mojo JSON-RPC Api",
	"order": [
		"c46929c9-2067-21c1-4fd8-6819a6b53c69"
	],
	"folders": [
		{
			"id": "db2431e0-ea8a-9104-a83e-6689b327c0f7",
			"name": "APIKey",
			"description": "",
			"order": [
				"f1aea7aa-c989-3cfe-e096-953b7f235c18"
			],
			"owner": "39911"
		},
		{
			"owner": "39911",
			"lastUpdatedBy": "10460",
			"lastRevision": 2164237,
			"id": "a56b8b10-4e62-a05e-b1f4-5af68aa9e3a4",
			"name": "Channels",
			"description": "",
			"order": [
				"267e037e-febb-974f-e406-c8347d13273e",
				"536a1361-f0a1-7082-260f-9366444c4935",
				"09013bf6-0a2e-0443-2997-2a0ef175c9d7",
				"4ae65804-fe53-11e0-3438-c4fb54376fd3",
				"454a1b22-07ac-5b5f-3eee-3767099217fa"
			]
		},
		{
			"owner": "39911",
			"lastUpdatedBy": "10460",
			"lastRevision": 2164238,
			"id": "ce9df416-1e4b-c961-1603-7eb1dc1c5ee2",
			"name": "Devices",
			"description": "",
			"order": [
				"a4fce50d-26f9-1402-2f95-3587f7191177",
				"5d149e40-991b-5723-2d29-b5975d4e9d79",
				"5e72cc7f-b28d-7ed8-c1ef-d1978e3cbf71",
				"f30d0861-628c-a276-2dd0-bc12c856ccb1",
				"132abd9d-6cbb-0e84-72a2-919acbb52dd4",
				"490cd5c7-599a-d6fc-60ee-f56943c81374",
				"4aaec887-288d-31c1-3216-9724d73fe0a6",
				"8c59e58f-e40e-112b-6138-1ac9931d2bd4",
				"13891cf9-8e5e-e85c-26b2-8c6915c3d26b",
				"b5cbbb96-d077-50bd-9890-0416ef6daff5"
			]
		},
		{
			"owner": "39911",
			"lastUpdatedBy": "10460",
			"lastRevision": 2932789,
			"id": "cdaaf526-f2e8-1321-8102-001faad04568",
			"name": "Events",
			"description": "",
			"order": [
				"d9a9e7f0-8501-ac3d-d4cd-ad78941b3553",
				"4f1df144-58fb-203a-cd67-751f05d49951"
			]
		},
		{
			"owner": "39911",
			"lastUpdatedBy": "10460",
			"lastRevision": 4400874,
			"id": "71ae7fdc-37ce-71b1-4f68-adf75ffac948",
			"name": "Locations",
			"description": "",
			"order": [
				"d5d53e49-f432-aa9e-c712-a4ac00ac7f36",
				"2f7f3708-e281-a891-529e-e244e7f2143b",
				"5f0f0311-1175-7f1e-d7b1-370683eb001d",
				"5563cb31-cc8b-1da0-b306-98baad2c9aec",
				"886ed9f8-9e18-ba47-a000-f33feb164a5f",
				"a46c6af4-da14-4a04-21b7-9aff5cd81f74",
				"1ec1fcf6-fe29-b135-e8b2-d93cffcced6b"
			],
			"collectionId": "283fcb0e-1f16-9751-335b-1cbb887b4ec1"
		},
		{
			"owner": "39911",
			"lastUpdatedBy": "10460",
			"lastRevision": 3269171,
			"id": "4757a8c2-a2fc-1eb5-dc9d-c1e8fe610906",
			"name": "Messages",
			"description": "",
			"order": [
				"6d633589-94f6-546e-843f-244c850af048",
				"b80f6cad-32f9-1ae4-f3fe-52892ffe29d9",
				"0590d804-eb3f-8a7f-7d4a-37e60b4cb209",
				"efa0ed19-f8aa-9646-fa7d-f90dd67f2916",
				"65520c13-7e0a-e79e-dc90-659873fe6717",
				"ac0ec89c-0a5d-1927-7b9c-cbf3366bdc16",
				"e6779c6f-d119-d9c7-3708-115a1fd09026",
				"8c150c4f-0a7c-6cab-765c-216d4b665306",
				"c6d47868-6363-e7aa-2263-18469b8a97f9",
				"8262eb07-0ae0-2ce9-051c-e66311f1daf0"
			]
		},
		{
			"owner": "39911",
			"lastUpdatedBy": "10460",
			"lastRevision": 2329154,
			"id": "ca906c5b-a8d4-a0e7-7bb4-8b9cc7100f48",
			"name": "Operations",
			"description": "",
			"order": [
				"46fc83d2-23c3-d40e-fbda-0e02d6266c2e",
				"e7272c63-6422-5ed2-45c8-c606cdc6c58e"
			]
		},
		{
			"owner": "39911",
			"lastUpdatedBy": "10460",
			"lastRevision": 2164241,
			"id": "77b4ab8c-1f16-8ea6-b7e1-afec51fedf8a",
			"name": "Router",
			"description": "",
			"order": [
				"c6cf3e79-24b0-f4d0-1b77-9a7c50d66a74",
				"f8f941f8-6d0f-0898-5f51-1d2b64b33ef0",
				"d8fbee78-8341-6d89-aafa-f18ece0d5a0a",
				"086836de-49b4-f270-e066-9286d7508caf",
				"6fa395aa-e9c2-a688-febf-dde26931d619"
			]
		},
		{
			"owner": "39911",
			"lastUpdatedBy": "10460",
			"lastRevision": 2164242,
			"id": "dfda092b-f010-8965-e971-5a5aaee5dd41",
			"name": "Transports",
			"description": "",
			"order": [
				"0f735a14-30d8-2598-c4c0-14d7f483e805",
				"e1235ba5-bcd6-c12a-afff-8eb6469ff995",
				"8dc8c5bf-5913-ae91-c0cf-a2f80b9b8b70",
				"b1f6f597-01d7-d7f3-3ceb-aa63594c5588",
				"268bcf88-670a-3b64-f951-57248e0f3c6b",
				"4faf4bdd-1ce2-49fb-73cc-9e0290b7641a",
				"912b5aca-66bc-a5c2-619f-99ecc643ad22",
				"f591365c-c717-e4d6-0eb9-2873d7772a42"
			]
		}
	],
	"timestamp": 1452622883030,
	"owner": "39911",
	"public": false,
	"hasRequests": true,
	"requests": [
		{
			"id": "0590d804-eb3f-8a7f-7d4a-37e60b4cb209",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623793548,
			"name": "message.resend",
			"description": "Re-sends a message\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - Message Object Id\n        options: Object - Options (reserved)\n    }\n    \nResponse (application/json):\n    \n    result: {\n            id: String - The device id\n        }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 400 Validation Failed\n             401 Access Denied\n             \n**Notes**\n\n1. The 'to' parameter is an alias for 'audience'\n2. audience will take the old style array, but will result in lower performance. \n3. notification will take a string if no options beyond text are required.\n4. it is recommended in production to base64 encode the payload before hand for better performance.  \n\n\n**DLR Mask Types**\n\n    {\n        ACCEPTED:  1\n        DELIVERED: 2\n        POLLED:    4\n        OPENED:    8\n        PENDING:   16\n        REJECTED:  32\n        ERROR:     64\n    };",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"message.resend\",\n    \"params\": {\n        \"id\": \"\"\n    }\n}",
			"folder": "4757a8c2-a2fc-1eb5-dc9d-c1e8fe610906"
		},
		{
			"id": "086836de-49b4-f270-e066-9286d7508caf",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623680271,
			"name": "route.set_incoming",
			"description": "Sets the routes incoming action handler\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        proto: String - the route protocol\n        action: String - drop, callback, forwardFrom, forwardTo,\n        handler: String - drop: n/a, callback: url, forward: protocol\n        callbackMethod: String - Optional. GET or POST, default is POST\n        forwardMatch: String - Optional device field to match the foward on, default is user_token\n    }\n    \nResponse (application/json):\n    \n    result: // Updated action\n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application not found\n             \n**Notes:**\n1. The forwardFrom and forwardTo will attempt to forward the incoming message based on user_token.\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"route.set_incoming\",\n    \"params\": {\n        \"proto\": \"sms\",\n        \"action\": \"callback\",\n        \"handler\": \"http://localhost:4000/\"\n    }\n}",
			"folder": "77b4ab8c-1f16-8ea6-b7e1-afec51fedf8a"
		},
		{
			"id": "09013bf6-0a2e-0443-2997-2a0ef175c9d7",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623270533,
			"name": "channel.list",
			"description": "Lists the applications unique channels\nand the number of subscribers.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        // Empty\n    }\n    \nResponse (application/json):\n    \n    result: [\n        {\n            _id: String - The channel name\n            count: Number - The number of unique subscribers to that channel\n        }\n    ]\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             \n             ",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"channel.list\",\n    \"params\": {\n \n    }\n}",
			"folder": "a56b8b10-4e62-a05e-b1f4-5af68aa9e3a4"
		},
		{
			"id": "0f735a14-30d8-2598-c4c0-14d7f483e805",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623539986,
			"name": "transport.create",
			"description": "Creates and returns a new transport, or modifies\nan exist with the same name.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        name: String - The application name.\n        description: String - Optional. The application detailed description.\n        proto: String - The transport protocol.\n        config: Object - The transport configuration. **See Below**\n        options: {\n            enabled: Boolean - Enable this transport in the router for the application.\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n        application: String - The application object id.\n        name: String - The transport name.\n        description: String - The application description.\n        proto: String\n        id: String - The transport object id.\n        createdAt: Date - Object creation date.\n        updatedAt: Date - Object last modified date.\n  \n    }\n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             \n             \n**Push System Configurations:**\n\npush.apns - Apple Push Notification Service\n    \n    {\n        public: {\n            certificate: String - Base64 Encode  PKCS12 APNS Certificate\n            passphrase: String - Certificate password\n        },\n        sandbox: {\n            certificate: String - Base64 Encode  PKCS12 APNS Certificate\n            passphrase: String - Certificate password\n        }\n    }\n\npush.gcm  - Google Cloud Messaging Service\n\n    {\n        sender_id: String - GCM Project Key/Sender Id\n        sender_key: String - GCM Sender API Key\n    }\n    \npush.poll - AIM/MOJO Inbox Service\n\n    {\n        // none\n    }\n\nsms.twilio - Twilio SMS\n\n    {\n        sid: String - Your Twilio account SID\n        auth_token: String - Your Twilio auth token\n        number: String - Your Twilio phone number\n\t    number_sid: String - The SID for you Twilio phone number\n\t}\n\t\nsms.whatsapp - What's App SMS\n    \n    {\n        msisdn: String - Your What's App phone number\n        username: String - Your What's App username\n        password: String - Your What's App password\n        ccode: String - What's App Country Code, default: '1'\n    }\n\n***Note:*** \nUse this cli tool to register for [What's App](https://github.com/tgalal/yowsup/archive/master.zip)\n\nThis tool will send you an sms (-r sms) or call you (-r voice) with a verification code used in the second step.\n\n        > ./yowsup-cli registration -p 14842807972 -C 1 -r sms\n        # status: sent\n        # retry_after: 1805\n        # length: 6\n        # method: sms\n        > ./yowsup-cli registration -p 14842807972 -C 1 -R <code>\n        # status: ok\n        # kind: free\n        # pw: HrizaR1OeMcZkBoV7WdshHRf7lU=\n        # price: $0.99\n        # price_expiration: 1434629333\n        # currency: USD\n        # cost: 0.99\n        # login: 14842807972\n        # type: existing\n        # expiration: 1463154019\n\n        ** use the 'pw' field above as your transport password **",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"transport.create\",\n    \"params\": {\n        \"proto\": \"push.apns\",\n        \"name\": \"\",\n        \"config\": {\n      \"sandbox\": {\n        \"certificate\": \"\",\n        \"passphrase\": \"\",\n        \"filename\": \"sandbox.p12\"\n      },\n      \"production\": {\n        \"certificate\": \"\",\n        \"passphrase\": \"\",\n        \"filename\": \"production.p12\"\n      }\n    },\n        \"options\": {\n            \"enable\": true\n        }\n    }\n}",
			"folder": "dfda092b-f010-8965-e971-5a5aaee5dd41"
		},
		{
			"id": "132abd9d-6cbb-0e84-72a2-919acbb52dd4",
			"folder": "ce9df416-1e4b-c961-1603-7eb1dc1c5ee2",
			"name": "device.count",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "Returns a count of devices for an application.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        query: Object - Optional query object\n    }\n    \nResponse (application/json):\n    \n    result: Number - Count of matching devices.\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n\n",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "{{url}}",
			"preRequestScript": "",
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"isFromCollection": true,
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"device.count\",\n    \"params\": {\n        \n    }\n}"
		},
		{
			"id": "13891cf9-8e5e-e85c-26b2-8c6915c3d26b",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623962517,
			"name": "device.get_data",
			"description": "Returns user-defined data in the device\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - the updated name\n        key: String - the data key\n    }\n    \nResponse (application/json):\n    \n    result: Any. - Value returned\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Device Not Found\n\n             \n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"device.get_data\",\n    \"params\": {\n        \"id\": \"\",\n        \"key\": \"fullname\"\n    }\n}",
			"folder": "ce9df416-1e4b-c961-1603-7eb1dc1c5ee2"
		},
		{
			"id": "1ec1fcf6-fe29-b135-e8b2-d93cffcced6b",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623874687,
			"name": "location.create",
			"description": "Creates or modifies and returns a new location.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        name: String - The location name.\n        description: String - Optional. The application detailed description.\n        positions: [ Array of positional objects ] - Legacy. See below for detail.\n        geofence: {\n            lng: Number - Longitude\n            lat: Number - Latitude\n            radius: Number - Radius in meters\n        }\n        beacon: {\n            type: String - Beacon type \n            id: String - Beacon id (uuid if ibeacon)\n            proximity: estimated trigger radius in meters\n            config: { beacon type specific configuration\n                min_ver: iBeacon minor version\n                maj_ver: iBeacon major version\n                namespace: eddystone or altbeacon namespace id\n                instance: eddystone or altbeacon instance id\n            }\n            min_ver: (**deprecated**) iBeacon minor version\n            maj_ver: (**deprecated**) iBeacon major version\n        }\n        properties: {\n            id: String - Option vendor id (defaults to name)\n            dwell_interval: Number - Enter interval in seconds. \n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n        name: String - The location name.\n        description: String - Optional. The application detailed description.\n        positions: [ Array of positional objects ] - Legacy. See below for detail.\n        geofence: {\n            // converted to a GeoJSON Point\n        }\n        beacon: {\n            type: String - Beacon type (ibeacon is the only one supported now)\n            id: String - Beacon id (uuid if ibeacon)\n            min_ver: iBeacon minor version\n            maj_ver: iBeacon major version\n            namespace: eddystone or altbeacon namespace id\n            instance: eddystone or altbeacon instance id\n            proximity: iBeacon proximity (immediate, near, far)\n        }\n        properties: {\n            id: String - Option vendor id (defaults to name)\n            enter_interval: Number - Enter interval in seconds. Default (1800s = 1hr)\n            exit_interval: Number - Exit interval in seconds. Default (90s)\n        }\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application Not Found\n             \n**Notes**\n\n1.  Supported beacon types are ibeacon (ios), eddystone or altbeacon (android)\n2.  \"dwell_interval\" defaults to 90s for geofences, 10s for beacons\n3.  The beacon \"config\" is overlayed to the beacon object on return.\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"location.create\",\n    \"params\": {\n       \"name\": \"Rob's Office Beacon Fake\",\n       \"beacon\": {\n           \"proximity\": 0.25,\n           \"id\": \"A90FE30A-55C2-47C4-B26B-0B8FCA33FEBA\"\n       }\n    }\n}",
			"folder": "71ae7fdc-37ce-71b1-4f68-adf75ffac948"
		},
		{
			"id": "267e037e-febb-974f-e406-c8347d13273e",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623253375,
			"name": "channel.subscribe",
			"description": "Subscribes a device to an application channel\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        device: String - Device id\n        channel: String - Channels or array of channels to subscribe to\n    }\n    \nResponse (application/json):\n    \n    result: {\n        id: String - The device id\n        subs: [ String ] - Array of channels the device is subsribed to\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Device Not Found\n             \n**Notes**\n\n1. channel can also be a string of comma separated values.\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"channel.subscribe\",\n    \"params\": {\n        \"device\": \"55a9609313556cfc125a84be\",\n        \"channel\": \"Soccer, Football\"\n    }\n}",
			"folder": "a56b8b10-4e62-a05e-b1f4-5af68aa9e3a4"
		},
		{
			"id": "268bcf88-670a-3b64-f951-57248e0f3c6b",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623566227,
			"name": "transport.set_name",
			"description": "Sets the transports name.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        name: String - The transport name.\n    }\n    \nResponse (application/json):\n    \n    result: {\n        name: String - The transport name.\n        id: String - The transport object id.\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Not found\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"transport.set_name\",\n    \"params\": {\n       \"id\": \"\",\n       \"name\": \"My new APNS Transport\"\n    }\n}",
			"folder": "dfda092b-f010-8965-e971-5a5aaee5dd41"
		},
		{
			"id": "2f7f3708-e281-a891-529e-e244e7f2143b",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623389863,
			"name": "location.fetch",
			"description": "Returns an array of locations, in default legacy format.\n\n**Note**:\nThis method supports legacy clients through operator overloads.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id | query: String or Object - See below.\n        skip: Number - Data query skip\n        limit: Number - Data query limit, max 100\n        options: {\n            geofences: Boolean - Return near geofences, default = true\n            beacons: Boolean/[String] - Return near beacons of type, default = true \n            sparse: Boolean - Return sparse objects without a geofence, default = true\n            count: Boolean - Only return a count, not the locations\n            version: String - Return version schema\n        }\n    }\n      \nResponse (application/json):\n    \n    result: [ Array of location objects, see location create ]\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application Not Found\n             \n**Notes**\n\n1.  The beacons option can be a csv of types or an array\n1.  The 'query' field is complete. The default is if it is a string it will check to see if its a valid object id, if so it will search by id, otherwise it will regex search by name.\n2.  'query' will also take an object that can search on other properties (i.e.)\n\n    query: {\n        'beacon.id': 'some-uuid'\n    }\n    \n    ",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"responses": [],
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"location.fetch\",\n    \"params\": {\n        \"options\": {\n            \"beacons\": \"ibeacon\"\n        }\n    }\n}",
			"folder": "71ae7fdc-37ce-71b1-4f68-adf75ffac948"
		},
		{
			"folder": "a56b8b10-4e62-a05e-b1f4-5af68aa9e3a4",
			"id": "454a1b22-07ac-5b5f-3eee-3767099217fa",
			"name": "channel.fetch",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "Retunrs a list of devices that subscribe\nto a channel. Supports skip and limit and\nfields. By default only the device id is returned.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - The channel name\n        skip: Number - Data search skip\n        limit: Number - Data search limit (max = 100)\n        fields: String | Object - '*' or object of fields from the devices matched to return, see below.\n    }\n    \nResponse (application/json):\n    \n    result: [\n        {\n            id: String - The device id\n            // Other fields request\n        }\n    ]\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             \n**Notes**\n\nFields are selected as such:\n\n    fields: {\n        <field name>: Boolean - include or exclude\n    }\n    \n    // Example, only return the name and id\n    fields: {\n        name: true\n    }",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "{{url}}",
			"preRequestScript": "",
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"isFromCollection": true,
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"channel.fetch\",\n    \"params\": {\n        \"id\": \"AUTH_MEMBERS\",\n        \"fields\": { \"name\": 1 }\n    }\n}"
		},
		{
			"id": "46fc83d2-23c3-d40e-fbda-0e02d6266c2e",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623712815,
			"name": "operation.status",
			"description": "Fetches status of a running operation\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n\nRequest (application/json):\n\n    params: {\n        id: String - The operation id\n      \n    }\n    \nResponse (application/json):\n    \n    result: {\n        // The message object\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Operation not found\n             \n ",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"operation.status\",\n    \"params\": {\n       \"id\": \"\"\n    }\n}",
			"folder": "ca906c5b-a8d4-a0e7-7bb4-8b9cc7100f48"
		},
		{
			"id": "490cd5c7-599a-d6fc-60ee-f56943c81374",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623946061,
			"name": "device.set_name",
			"description": "Sets the device name.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - The device id to update\n        name: String - the updated name\n    }\n    \nResponse (application/json):\n    \n    result: {\n        name: String - the updated name\n        id: String - Device Object Id\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Device Not Found\n\n             \n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"device.set_name\",\n    \"params\": {\n        \"id\": \"\",\n        \"name\": \"foo\"\n    }\n}",
			"folder": "ce9df416-1e4b-c961-1603-7eb1dc1c5ee2"
		},
		{
			"id": "4aaec887-288d-31c1-3216-9724d73fe0a6",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623951377,
			"name": "device.set_user_token",
			"description": "Sets a device user token.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - The device id to update\n        user_token: String - the updated name\n    }\n    \nResponse (application/json):\n    \n    result: {\n        user_token: String - the updated user_token\n        id: String - Device Object Id\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Device Not Found\n\n             \n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"device.set_user_token\",\n    \"params\": {\n        \"id\": \"\",\n        \"user_token\": \"foo\"\n    }\n}",
			"folder": "ce9df416-1e4b-c961-1603-7eb1dc1c5ee2"
		},
		{
			"id": "4ae65804-fe53-11e0-3438-c4fb54376fd3",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623285809,
			"name": "channel.count",
			"description": "Returns the number of unique subscribers\nfor a channel.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        channel: String - the channel name\n    }\n    \nResponse (application/json):\n    \n    result: Number - the number of subscribers\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             \n             ",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"channel.count\",\n    \"params\": {\n        \"channels\": \"Football, Soccer\",\n        \"options\": {\n            \"all\": true\n        }\n    }\n}",
			"folder": "a56b8b10-4e62-a05e-b1f4-5af68aa9e3a4"
		},
		{
			"id": "4f1df144-58fb-203a-cd67-751f05d49951",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623893168,
			"name": "event.schedule",
			"description": "Post an event to the application event queue.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        type: String. The event type\n        device: String. Optional. The event device object id\n        data: Object. The event data\n        when: String. Date or moment string.\n    }\n    \nResponse (application/json):\n    \n    result: {\n  \n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application Not Found\n             404 Device Not Found\n             \n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"event.schedule\",\n    \"params\": {\n        \"type\": \"foo.bar\",\n        \"device\": \"\"\n    }\n}",
			"folder": "cdaaf526-f2e8-1321-8102-001faad04568"
		},
		{
			"id": "4faf4bdd-1ce2-49fb-73cc-9e0290b7641a",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623574221,
			"name": "transport.set_description",
			"description": "Sets the transports description.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        description: String - The transport description.\n    }\n    \nResponse (application/json):\n    \n    result: {\n        description: String - The transport description.\n        id: String - The transport object id.\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Not found\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"transport.set_description\",\n    \"params\": {\n       \"id\": \"\",\n       \"description\": \"something meaningful\"\n    }\n}",
			"folder": "dfda092b-f010-8965-e971-5a5aaee5dd41"
		},
		{
			"id": "536a1361-f0a1-7082-260f-9366444c4935",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623261674,
			"name": "channel.unsubscribe",
			"description": "Unsubscribes a device from an application channel.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        device: String - Device id\n        channel: String - Channels or array of channels to unsubscribe to\n    }\n    \nResponse (application/json):\n    \n    result: {\n        id: String - The device id\n        subs: [ String ] - Array of channels the device is subsribed to\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Device Not Found\n             \n**Notes**\n\n1. channel can also be a string of comma separated values.\n\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"channel.unsubscribe\",\n    \"params\": {\n        \"device\": \"552d69aa3c4a1cee5c40c4d8\",\n        \"channel\": \"49ers\"\n    }\n}",
			"folder": "a56b8b10-4e62-a05e-b1f4-5af68aa9e3a4"
		},
		{
			"folder": "71ae7fdc-37ce-71b1-4f68-adf75ffac948",
			"id": "5563cb31-cc8b-1da0-b306-98baad2c9aec",
			"name": "location.count",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "Returns a count of locations given the query\n\n**Note**:\nThis method supports legacy clients through operator overloads.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id | query: String or Object - See below.\n        options: {\n            beacons: Boolean - Only return beacons\n        }\n      \n    \nResponse (application/json):\n    \n    result: Number - the number of locations matched\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application Not Found\n             \n**Notes**\n\n1. The 'query' field is complete. The default is if it is a string it will check to see if its a valid object id, if so it will search by id, otherwise it will regex search by name.\n2. 'query' will also take an object that can search on other properties (i.e.)\n\n    query: {\n        'beacon.id': 'some-uuid'\n    }\n    \n    ",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "{{url}}",
			"preRequestScript": "",
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"isFromCollection": true,
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"location.count\",\n    \"params\": {\n       \n    }\n}"
		},
		{
			"id": "5d149e40-991b-5723-2d29-b5975d4e9d79",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623922629,
			"name": "device.unregister",
			"description": "Unregisters a device and sends an appropriate event.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - The device id to update\n     }\n    \nResponse (application/json):\n    \n    result: {     \n        // empty\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Device not found\n\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"device.unregister\",\n    \"params\": {\n        \"id\": \"\"\n    }\n}",
			"folder": "ce9df416-1e4b-c961-1603-7eb1dc1c5ee2"
		},
		{
			"id": "5e72cc7f-b28d-7ed8-c1ef-d1978e3cbf71",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623929194,
			"name": "device.fetch",
			"description": "Returns a specific device.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - The device id to update\n        push: { // This can be an object or a string of the push address\n            proto: String - Optional push protocol\n            addr: String - Push address\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n        id: String - New or existin device id.\n        user_token: String - The client unique device token\n        name: String - The device name.\n        info: Object - The device informational object.\n     }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Device not found\n\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"device.fetch\",\n    \"params\": {\n        \"id\": \"\"\n    }\n}",
			"folder": "ce9df416-1e4b-c961-1603-7eb1dc1c5ee2"
		},
		{
			"id": "5f0f0311-1175-7f1e-d7b1-370683eb001d",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623846686,
			"name": "location.modify",
			"description": "Creates or modifies and returns a new location.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - The location object id or vendor id of the location to update.\n        name: String - The location name.\n        description: String - Optional. The application detailed description.\n        positions: [ Array of positional objects ] - Legacy. See below for detail.\n        geofence: {\n            lng: Number - Longitude\n            lat: Number - Latitude\n            radius: Number - Radius in meters\n        }\n        beacon: {\n            type: String - Beacon type (ibeacon is the only one supported now)\n            id: String - Beacon id (uuid if ibeacon)\n            min_ver: iBeacon minor version\n            maj_ver: iBeacon major version\n            proximity: iBeacon proximity (immediate, near, far)\n        }\n        properties: {\n            id: String - Option vendor id (defaults to name)\n            enter_interval: Number - Enter interval in seconds. Default (1800s = 1hr)\n            exit_interval: Number - Exit interval in seconds. Default (90s)\n        }\n        options: {\n            schema: String - The returned location schema version \"1.0\" or \"2.0\", default is \"1.0\"\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n        name: String - The location name.\n        description: String - Optional. The application detailed description.\n        positions: [ Array of positional objects ] - Legacy. See below for detail.\n        geofence: {\n            // converted to a GeoJSON Point\n        }\n        beacon: {\n            type: String - Beacon type (ibeacon is the only one supported now)\n            id: String - Beacon id (uuid if ibeacon)\n            min_ver: iBeacon minor version\n            maj_ver: iBeacon major version\n            proximity: iBeacon proximity (immediate, near, far)\n        }\n        properties: {\n            id: String - Option vendor id (defaults to name)\n            enter_interval: Number - Enter interval in seconds. Default (1800s = 1hr)\n            exit_interval: Number - Exit interval in seconds. Default (90s)\n        }\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application Not Found\n             \n**Notes**\n\n1. This method supports legacy clients through operator overloads.\n1. This method is an alias for location.create\n1.  The 'positions' param overrides geojson and beacon param, this is to support older SDKs, newer clients should use the more optimal format.\n2.  The 'enter_interval' is the minimum time between location.enter events firing for a single device.\n3.  The 'exit_interval' is the minimum time a device must \"dwell\" outside of a location before an location.exit event will fire.\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"location.modify\",\n    \"params\": {\n        \"id\": \"\",\n       \"properties\": {\n           \"dwell_interval\": 15\n       }\n    }\n}",
			"folder": "71ae7fdc-37ce-71b1-4f68-adf75ffac948"
		},
		{
			"id": "65520c13-7e0a-e79e-dc90-659873fe6717",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623772837,
			"name": "message.cancel",
			"description": "Attempts to cancel an existing message operation.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n\nRequest (application/json):\n\n    params: {\n        id: String - Message ID\n    }\n    \nResponse (application/json):\n    \n     result: {\n        // The operation object\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Operation not found\n             \n             \n**Notes**",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"message.cancel\",\n    \"params\": {\n        \"id\": \"\"\n    }\n}",
			"folder": "4757a8c2-a2fc-1eb5-dc9d-c1e8fe610906"
		},
		{
			"id": "6d633589-94f6-546e-843f-244c850af048",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623822391,
			"name": "message.create",
			"description": "Creates a predefined message with templating.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        template: {\n            id: String - Unique tempate name.\n            defaults: Object - template default parameter vaules\n        },\n        to | audience: Optional. {\n            devices: [ String ] - Array of device ids\n            user_tokens: [ String ] - Array of user tokens\n            channels: [ String ] - Array of channels\n            transports: [ String ] - Array of transport types (i.e. push.apns, push.gcm)\n        }\n        notification: { \n            text: String - notification alert text\n        }\n        tags: [ String ] - array of tags for the message\n        payload_type: String - Message payload mime type\n        payload: String | Object - Message payload content\n        options: {\n            encodedPayload: Boolean - If true payloaded is base64 encoded\n            context: Object - Message sender context\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n            id: String - The device id\n        }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 400 Validation Failed\n             401 Access Denied\n             \n**Notes**\n\n1. The 'to' parameter is an alias for 'audience'\n2. audience will take the old style array, but will result in lower performance. \n3. notification will take a string if no options beyond text are required.\n4. it is recommended in production to base64 encode the payload before hand for better performance.  ",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"message.create\",\n    \"params\": {\n        \"template\": {\n            \"id\": \"MOTD\",\n            \"description\": \"Message of the day\",\n            \"defaults\": {\n                \"greeting\": \"Good morning\",\n                \"device\": {\n                    \"fullname\": \"Acme User\"\n                }\n            }\n        },\n        \"notification\": {\n            \"text\": \"{{greeting}}, {{device.fullname}}.\"\n        },\n        \"payload\": \"{{device.fullname}}, don't forget to update your calendar.\",\n        \"options\": {\n            \"encodedPayload\": false,\n            \"context\": \"fobart\"\n        }\n    }\n}",
			"folder": "4757a8c2-a2fc-1eb5-dc9d-c1e8fe610906"
		},
		{
			"id": "6fa395aa-e9c2-a688-febf-dde26931d619",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623670384,
			"name": "route.delete",
			"description": "Removes and de-activates a message route by id or transport protocol.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - Route id\n        proto: String - Transport protocol\n    }\n    \nResponse (application/json):\n    \n    result: {\n        // empty\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Route not found\n\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"route.delete\",\n    \"params\": {\n       \n    }\n}",
			"folder": "77b4ab8c-1f16-8ea6-b7e1-afec51fedf8a"
		},
		{
			"id": "8262eb07-0ae0-2ce9-051c-e66311f1daf0",
			"folder": "4757a8c2-a2fc-1eb5-dc9d-c1e8fe610906",
			"name": "message.search",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "Perform an elastisearch on the messages.",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "{{url}}",
			"preRequestScript": "",
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"isFromCollection": true,
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"message.search\",\n    \"params\": {\n        \"query\": \"Packers\"\n    }\n}"
		},
		{
			"id": "886ed9f8-9e18-ba47-a000-f33feb164a5f",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623411829,
			"name": "location.sync",
			"description": "Synchonized the location collection with a fetched json file.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        schema: {\n            action: String. The field holding the action property. Default 'action'\n            id: String. The location client id field.\n            name: String. The location name field.\n            lat: String. The geofence latitude field.\n            lng: String. The geofence longitude field.\n            radius: String. The geofence radius\n        }\n        options: {\n            purge: Boolean - Purge collection before sync\n            httpAuth: {\n                basic: {\n                    user: String - http auth username\n                    pass: String - http auth password\n                }\n            }\n        }\n        purge: Boolean - alias options.purge\n        username: String - alias options.httpAuth.basic.user\n        password: String - alias options.httpAuht.basic.pass\n    }\n    \nResponse (application/json):\n    \n    result: {\n        operation: String - Pending operation id\n        status: String - Always 'PENDING'\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application Not Found\n             \n**Notes**\nThis method generates special events to notifiy the caller of status\n\n\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"location.sync\",\n    \"params\": {\n       \"schema\":{\n            \"action\":\"Action\",\n            \"id\":\"Id\",\n            \"name\":\"LocationName\",\n            \"lat\":\"Latitude\",\n            \"lng\":\"Longitude\",\n            \"radius\":\"FenceRadiusMeters\"\n        },\n        \"url\": \"http://aim-mc-api.qwasi.com/strategycorpsfull.json\",\n        \"purge\":\"true\"\n    }\n}",
			"folder": "71ae7fdc-37ce-71b1-4f68-adf75ffac948"
		},
		{
			"id": "8c150c4f-0a7c-6cab-765c-216d4b665306",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623738387,
			"name": "message.poll",
			"description": "Used by a device to pull a pending message\nid off of its poll inbox queue.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        device: String - The device id\n        options: {\n            fetch: Boolean - If true also returns the content of the message\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n        // The message object\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Message not found\n             \n             \n**Notes**",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"message.poll\",\n    \"params\": {\n        \"device\": \"\",\n        \"options\": {\n            \"fetch\": true,\n            \"encodedPayload\": false\n        }\n    }\n}",
			"folder": "4757a8c2-a2fc-1eb5-dc9d-c1e8fe610906"
		},
		{
			"id": "8c59e58f-e40e-112b-6138-1ac9931d2bd4",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623958778,
			"name": "device.set_push_token",
			"description": "Sets a push token.\n\n**Note**:\nThis method replaces push.register, which is now deprecated.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - The device id to update\n        proto: String - the push address protocol\n        token: String - The push address token\n    }\n    \nResponse (application/json):\n    \n    result: {\n        push: Object - The device push address\n        id: String - Device Object Id\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Device Not Found\n\n             \n**Note**:\nFor testing purposes, the token can be set to '__testing'. This will generate a dummy push token.\nSending to devices with dummy tokens will result in the router flow testing up to the point of delivery.",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"device.set_push_addr\",\n    \"params\": {\n        \"id\": \"\",\n        \"type\": \"push.apns\",\n        \"token\": \"\"\n    }\n}",
			"folder": "ce9df416-1e4b-c961-1603-7eb1dc1c5ee2"
		},
		{
			"id": "8dc8c5bf-5913-ae91-c0cf-a2f80b9b8b70",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452624738604,
			"name": "transport.fetch",
			"description": "Fetches a transport by id. This call supports field selectors, see below.\nBy default this call does not return the configuration to\nreduce network traffic.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - Transport object id.\n        fields: object - Fetch field selector.\n    }\n    \nResponse (application/json):\n    \n    result: {\n        application: String - The application object id.\n        name: String - The transport name.\n        description: String - The application description.\n        proto: String\n        id: String - The transport object id.\n        createdAt: Date - Object creation date.\n        updatedAt: Date - Object last modified date.\n        config: Object - * Optional (see below)\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Not found\n             \n**Field Selectors**\nFetch methods take field selectors so the caller can pick \nwhich fields to return, they are boolean flags on the field names.\nThe following example will include the config field, which is excluded by\ndefault for this method.\n\n    {\n        config: true\n    }\n\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"responses": [],
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"transport.fetch\",\n    \"params\": {\n       \"id\": \"\",\n       \"fields\": {\n           \"config\": true\n       }\n    }\n}"
		},
		{
			"id": "912b5aca-66bc-a5c2-619f-99ecc643ad22",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623621212,
			"name": "transport.set_config",
			"description": "Sets a transports configuration, the configuration object is not\nreturned to conserve network bandwidth for the operation.\n\n**Note** See transport.create for the protocol specific configuration options.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        proto: String - The transport config protocol.\n        config: Object - The transport config.\n    }\n    \nResponse (application/json):\n    \n    result: {\n        id: String - The transport object id.\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Not found\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"transport.set_config\",\n    \"params\": {\n        \"id\": \"\",\n        \"proto\": \"push.apns\",\n        \"config\": {\n            \"production\": {\n                \"certificate\": \"\",\n                \"passphrase\": \"\"\n            },\n            \"sandbox\": {\n                \"certificate\": \"\",\n                \"passphrase\": \"\"\n            }\n        }\n    }\n}",
			"folder": "dfda092b-f010-8965-e971-5a5aaee5dd41"
		},
		{
			"id": "a46c6af4-da14-4a04-21b7-9aff5cd81f74",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623865396,
			"name": "location.remove",
			"description": "Removes a location by id\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: Location id\n    }\n      \n    \nResponse (application/json):\n    \n    result: {\n        // Empty\n    }\n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Location Not Found\n             404 Application Not Found\n             \n    \n    ",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"location.remove\",\n    \"params\": {\n        \"id\": \"\"  \n    }\n}",
			"folder": "71ae7fdc-37ce-71b1-4f68-adf75ffac948"
		},
		{
			"id": "a4fce50d-26f9-1402-2f95-3587f7191177",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623916564,
			"name": "device.register",
			"description": "Registers or updates a new device with an application\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - Optional. The device id to update\n        user_token: String - The client user identifier.\n        name: String - The device name.\n        info: Object - The device informational object.\n        push: Optional. {\n            proto: String - the push/notification protocol\n            addr: String - the push/notification addr\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n        id: String - New or existin device id.\n        user_token: String - The client unique device token\n        name: String - The device name.\n        info: Object - The device informational object.\n     }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Device not found\n\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"device.register\",\n    \"params\": {\n        \"id\": \"\",\n        \"name\": \"Barsooomish\",\n        \"user_token\": \"+\",\n        \"push\": {\n            \"proto\": \"push.apns\",\n            \"addr\": \"\"\n        }\n    }\n}",
			"folder": "ce9df416-1e4b-c961-1603-7eb1dc1c5ee2"
		},
		{
			"id": "ac0ec89c-0a5d-1927-7b9c-cbf3366bdc16",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623765511,
			"name": "message.query",
			"description": "Used to query a message for information.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - the message id\n        options: {\n            includeContent: Boolean - Defaults false, returns the message content and stats\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n        dlr: {  // DLR Counters\n            rejected: Number\n            pending: Number\n            opened: Number\n            polled: Number\n            delivered: Number\n            accepted: Number\n        },\n        system: {// System Coutners\n            errors: Number  - Number of send errors\n            handle: Number  - Number of send attempts\n            processed: Number - Number of sends successfully processed\n        }\n        id: String - The message id\n        context: Object - The message user context\n        completed_at: Date - The date processing for this message was completed\n        processed_at: Date - The date processing for this message started.\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             \n             \n**Notes**",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"message.query\",\n    \"params\": {\n        \"id\": \"\",\n        \"options\": {\n            \"includeContent\": false\n        }\n    }\n}",
			"folder": "4757a8c2-a2fc-1eb5-dc9d-c1e8fe610906"
		},
		{
			"id": "b1f6f597-01d7-d7f3-3ceb-aa63594c5588",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623638296,
			"name": "transport.list",
			"description": "Returns a list of transports for the\nspecified application.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        // none\n    }\n    \nResponse (application/json):\n\n    result: [ Array of Transport Objects ] - See transport.create.\n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application not found",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"transport.list\",\n    \"params\": {\n       \n    }\n}",
			"folder": "dfda092b-f010-8965-e971-5a5aaee5dd41"
		},
		{
			"id": "b5cbbb96-d077-50bd-9890-0416ef6daff5",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623966516,
			"name": "device.set_data",
			"description": "Sets user-defined data in the device\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - the updated name\n        key: String - the data key\n        value: Any - the data value\n            // or\n        data: Object - object with keys to update in the device data\n    }\n    \nResponse (application/json):\n    \n    result: {\n        id: String - Device Object Id\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Device Not Found\n\n             \n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"device.set_data\",\n    \"params\": {\n        \"id\": \"\",\n        \"data\": {\n            \"fullname\": \"Rob Rodriguez\",\n            \"displayname\": \"Rob\"\n        }\n    }\n}",
			"folder": "ce9df416-1e4b-c961-1603-7eb1dc1c5ee2"
		},
		{
			"id": "b80f6cad-32f9-1ae4-f3fe-52892ffe29d9",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623805326,
			"name": "message.send",
			"description": "Sends a message to a device audience\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        to | audience: {\n            devices: [ String ] - Array of device ids\n            user_tokens: [ String ] - Array of user tokens\n            channels: [ String ] - Array of channels\n            transports: [ String ] - Array of transport types (i.e. push.apns, push.gcm)\n            push_tokens: [ Object ] - Array of push address objects { proto:, addr: }\n            sms: [ String ] - Array of msisdns\n        },\n        template: {\n            id: String - template id\n            values: Object - replacement values for the new message\n        },\n        notification: { \n            text: String - notification alert text\n        }\n        tags: [ String ] - array of tags for the message\n        payload_type: String - Message payload mime type\n        payload: String | Object - Message payload content\n        options: {\n            encodedPayload: Boolean - If true payloaded is base64 encoded\n            context: Object - Message sender context\n            send_at: String - This can be either an ISO date, or a relative momemnt like 'in 30 minutes'\n            dlr_mask: Number - Bit field masks for dlr types to send events for this message, default: 127\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n            id: String - The device id\n        }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 400 Validation Failed\n             401 Access Denied\n             \n**Notes**\n\n1. The 'to' parameter is an alias for 'audience'\n2. audience will take the old style array, but will result in lower performance. \n3. notification will take a string if no options beyond text are required.\n4. it is recommended in production to base64 encode the payload before hand for better performance.  \n\n\n**DLR Mask Types**\n\n    {\n        ACCEPTED:  1\n        DELIVERED: 2\n        POLLED:    4\n        OPENED:    8\n        PENDING:   16\n        REJECTED:  32\n        ERROR:     64\n    };",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"message.send\",\n    \"params\": {\n\"payload_type\": \"text/html\",\n                \"payload\": \"foo\",\n                \"options\":{\n                    \"encodedPayload\": false\n                },\n                \"notification\": \"test\",\n                \"audience\": {\n                    \"devices\": [\"\"]\n                }\n            }\n}",
			"folder": "4757a8c2-a2fc-1eb5-dc9d-c1e8fe610906"
		},
		{
			"id": "c46929c9-2067-21c1-4fd8-6819a6b53c69",
			"name": "server status",
			"dataMode": "params",
			"data": [],
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"apikey.create\",\n    \"params\": {\n       \n    }\n}",
			"descriptionFormat": null,
			"description": "\n",
			"headers": "Content-Type: application/json\n",
			"method": "HEAD",
			"pathVariables": {},
			"url": "{{url}}",
			"preRequestScript": "",
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\ntests[\"Validate Scope\"] = data.result.scope[0] === 'app';\ntests[\"Validate Key\"] = data.result.key.length === 32;\n",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94"
		},
		{
			"id": "c6cf3e79-24b0-f4d0-1b77-9a7c50d66a74",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623701069,
			"name": "route.add",
			"description": "Creates and activates a new message route via the specified transport.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        proto: String - Transport protocol\n        transport: String - Transport id\n        incoming: Optional. {\n            action: String - Incoming message action, default: none\n            handler: String - The incoming handler.\n        }\n        outgoing: Optional. {\n            action: String - The outgoing message action. default: send\n            handler: Stiring - The outgoing hander, default: self\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n        proto: String - Transport protocol\n        transport: String - Transport id\n        incoming: Optional. {\n            action: String - Incoming message action, default: none\n            handler: String - The incoming handler.\n        }\n        outgoing: Optional. {\n            action: String - The outgoing message action. default: send\n            handler: Stiring - The outgoing hander, default: self\n        }\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Transport not found\n             404 Application not found\n\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"route.add\",\n    \"params\": {\n       \n    }\n}",
			"folder": "77b4ab8c-1f16-8ea6-b7e1-afec51fedf8a"
		},
		{
			"id": "c6d47868-6363-e7aa-2263-18469b8a97f9",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623730186,
			"name": "message.count",
			"description": "Returns the number of messages in a\ndevice inbox.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n\nRequest (application/json):\n\n    params: {\n        device: String - The device id\n        options: {\n            pending: Boolean - Default true, return pending message count\n            fetched: Boolean - Default to false, return fetched message count\n        }\n    }\n    \nResponse (application/json):\n    \n    result: Number - the number of messages pending\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Message not found\n             \n             \n**Notes**",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"message.count\",\n    \"params\": {\n        \"device\": \"\"\n    }\n}",
			"folder": "4757a8c2-a2fc-1eb5-dc9d-c1e8fe610906"
		},
		{
			"id": "d5d53e49-f432-aa9e-c712-a4ac00ac7f36",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623382479,
			"name": "location.create",
			"description": "Creates or modifies and returns a new location.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        name: String - The location name.\n        description: String - Optional. The application detailed description.\n        positions: [ Array of positional objects ] - Legacy. See below for detail.\n        geofence: {\n            lng: Number - Longitude\n            lat: Number - Latitude\n            radius: Number - Radius in meters\n        }\n        beacon: {\n            type: String - beacon type \n            id: [Mixed] - beacon id array\n            proximity: estimated trigger radius in meters\n            parsestring: String - bluetooth parse string\n        }\n        properties: {\n            id: String - Option vendor id (defaults to name)\n            dwell_interval: Number - Enter interval in seconds. \n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n        name: String - The location name.\n        description: String - Optional. The application detailed description.\n        positions: [ Array of positional objects ] - Legacy. See below for detail.\n        geofence: {\n            // converted to a GeoJSON Point\n        }\n        beacon: {\n            type: String - beacon type \n            id: [Mixed] - beacon id array\n            proximity: estimated trigger radius in meters\n            parsestring: String - bluetooth parse string\n        }\n        properties: {\n            id: String - Option vendor id (defaults to name)\n            enter_interval: Number - Enter interval in seconds. Default (1800s = 1hr)\n            exit_interval: Number - Exit interval in seconds. Default (90s)\n        }\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application Not Found\n             \n**Notes**\n\n1.  Supported beacon types are:\n  2.  ibeacon\n    3. id[0]: String - UUID\n    4. id[1]: Number - major version\n    5. id[1]: Number - minor version\n  3.  eddystone\n    4. id[0]: String (hex) - namespace\n    5. id[1]: String (hex) - instance\n  4.  eddytsone-url\n    4. id[0]: String (hex) - namespace\n    5. id[1]: String (hex) - instance\n  5.  altbeacon\n    4. id[0]: String (hex) - namespace\n    5. id[1]: String (hex) - instance\n  6.  placeedge\n    4. id[0]: String (hex) - namespace\n    5. id[1]: String (hex) - instance\n2.  \"dwell_interval\" defaults to 90s for geofences, 10s for beacons\n\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"location.create\",\n    \"params\": {\n       \"name\": \"Rob's Office Beacon Fake\",\n       \"beacon\": {\n           \"proximity\": 0.25,\n           \"id\": \"A90FE30A-55C2-47C4-B26B-0B8FCA33FEBA\"\n       }\n    }\n}",
			"folder": "71ae7fdc-37ce-71b1-4f68-adf75ffac948"
		},
		{
			"id": "d8fbee78-8341-6d89-aafa-f18ece0d5a0a",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623687925,
			"name": "route.set_outgoing",
			"description": "Sets the routes outgoing action handler\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        proto: String - the route protocol\n        action: String - drop, self, callback, proxy\n        handler: String - drop: n/a, self: n/a, callback: url, proxy: proto\n        callbackMethod: String - Optional. GET or POST, default is POST\n        proxyMatch: String - Optional device field to match the proxy on, default is user_token\n    }\n    \nResponse (application/json):\n    \n    result: // Updated action\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application not found\n\n**Notes:**\n\n1. The proxy method will attempt to redirect the send to another protol, using the user_token to lookup another device registered for that protocol.\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"route.set_outgoing\",\n    \"params\": {\n       \n    }\n}",
			"folder": "77b4ab8c-1f16-8ea6-b7e1-afec51fedf8a"
		},
		{
			"id": "d9a9e7f0-8501-ac3d-d4cd-ad78941b3553",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623885861,
			"name": "event.post",
			"description": "Post an event to the application event queue.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        type: String. The event type\n        device: String. The event device object id\n        data: Object. The event data\n    }\n    \nResponse (application/json):\n    \n    result: {\n  \n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application Not Found\n             404 Device Not Found\n             \n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"event.post\",\n    \"params\": {\n        \"type\": \"com.qwasi.foo\",\n        \"device\": \"\"\n    }\n}",
			"folder": "cdaaf526-f2e8-1321-8102-001faad04568"
		},
		{
			"id": "e1235ba5-bcd6-c12a-afff-8eb6469ff995",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623550044,
			"name": "transport.delete",
			"description": "Deletes a transport.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - The transport object id.\n    }\n    \nResponse (application/json):\n\n    result: {\n        // empty\n    }\n    \nReturns:\n\n    Success: 200 OK\n    Failure: 401 Access Denied\n             404 Transport Not Found \n            ",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"transport.delete\",\n    \"params\": {\n       \"id\": \"\"\n    }\n}",
			"folder": "dfda092b-f010-8965-e971-5a5aaee5dd41"
		},
		{
			"id": "e6779c6f-d119-d9c7-3708-115a1fd09026",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623752821,
			"name": "message.fetch",
			"description": "Retrieves a specific message. Backward\ncompatible with legacy clients, will \nforward to message.poll if message id\nis not specified.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n\nRequest (application/json):\n\n    params: {\n        id: String - The message id\n        device: String - The device id\n        proto: String - The protocol fetching the message\n        flags: {\n            opened: Boolean - Set to true if this message was viewed by the user\n        }\n        options: {\n            encodedPayload: Boolean - Default is true, set false for testing returns a decoded payload\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n        // The message object\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Message not found\n             \n             \n**Notes**",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"message.fetch\",\n    \"params\": {\n        \"id\":\"\",\n        \"device\": \"\",\n        \"options\": {\n            \"encodedPayload\": false\n        }\n    }\n}",
			"folder": "4757a8c2-a2fc-1eb5-dc9d-c1e8fe610906"
		},
		{
			"id": "e7272c63-6422-5ed2-45c8-c606cdc6c58e",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623718595,
			"name": "operation.cancel",
			"description": "Attempts to cancel a running operation\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n\nRequest (application/json):\n\n    params: {\n        id: String - The operation id\n    }\n    \nResponse (application/json):\n    \n    result: {\n        // The operation object\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Operation not found\n             \n ",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"operation.cancel\",\n    \"params\": {\n       \"id\": \"\"\n    }\n}",
			"folder": "ca906c5b-a8d4-a0e7-7bb4-8b9cc7100f48"
		},
		{
			"id": "efa0ed19-f8aa-9646-fa7d-f90dd67f2916",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623780542,
			"name": "message.validate",
			"description": "Validates a message payload and format.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        to | audience: {\n            devices: [ String ] - Array of device ids\n            user_tokens: [ String ] - Array of user tokens\n            channels: [ String ] - Array of channels\n            transports: [ String ] - Array of transport types (i.e. push.apns, push.gcm)\n        }\n        notification: { \n            text: String - notification alert text\n        }\n        tags: [ String ] - array of tags for the message\n        payload_type: String - Message payload mime type\n        payload: String | Object - Message payload content\n        options: {\n            encodePayload: Boolean - If true the server will base64 encode the payload on the fly\n            context: Object - Message sender context\n            sendAt: String - Date string, timestamp or date.js string.\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n            // Returns the validated and cleanedup message\n        }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 400 Validation Failed \n             401 Access Denied\n             \n             \n**Notes**\n\n1. The 'to' parameter is an alias for 'audience'\n2. audience will take the old style array, but will result in lower performance. \n3. notification will take a string if no options beyond text are required.\n4. it is recommended in production to base64 encode the payload before hand for better performance.  ",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"message.validate\",\n    \"params\": {\n        \"to\": {\n            \"devices\": [\"\"]\n        },\n        \"options\": {\n            \"send_at\": \"tomorrow at 8am PST\"\n        }\n    }\n}",
			"folder": "4757a8c2-a2fc-1eb5-dc9d-c1e8fe610906"
		},
		{
			"id": "f1aea7aa-c989-3cfe-e096-953b7f235c18",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "tests[\"Status code is 200\"] = responseCode.code === 200;\nvar data = JSON.parse(responseBody);\ntests[\"Validate Scope\"] = data.result.scope[0] === 'app';\ntests[\"Validate Key\"] = data.result.key.length === 32;\n",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623240742,
			"name": "apikey.qr",
			"description": "Creates and returns a new API key for the specified \napplication.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        scope: [ String ] - Optional. Array of scopes.\n        options: {\n            device: String - Optional. Device Id.\n            readonly: Boolean - Optional. Protect this. api key from deletion\n        }\n    }\n    \nResponse (application/json):\n    \n    result: {\n        scope: [ String ] - The scope array\n        device: Device id.\n        key: String - The ApiKey value.\n        readonly: Boolean.\n        application: String - The Application Id.\n        id: String - The ApiKey Id.\n        createdAt: Date - Object creation date.\n        updatedAt: Date - Object last modified date.\n    }\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application not found\n\nScopes:\n\n1. `app` :  (default) Full application API access.\n1. `device` :  Allows for registering and modifying devices and fetching messages.\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n   \"jsonrpc\": \"2.0\",\n   \"id\": 0,\n   \"method\": \"apikey.qr\",\n   \"params\": {\n      \n   }\n}",
			"folder": "db2431e0-ea8a-9104-a83e-6689b327c0f7"
		},
		{
			"id": "f30d0861-628c-a276-2dd0-bc12c856ccb1",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623935218,
			"name": "device.list",
			"description": "Returns a listing of devices for an \napplication.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        skip: Number - Data search skip\n        limit: Number - Data search limit, max 100\n        query: Object - Optional query object\n    }\n    \nResponse (application/json):\n    \n    result: [ Array of device objects. See device.create ]\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"device.list\",\n    \"params\": {\n        \"query\": {\n            \"user_token\": {\n                \"like\": \"\\\\+14089167525\"\n            }\n        }\n    }\n}",
			"folder": "ce9df416-1e4b-c961-1603-7eb1dc1c5ee2"
		},
		{
			"id": "f591365c-c717-e4d6-0eb9-2873d7772a42",
			"headers": "Content-Type: application/json\n",
			"url": "{{url}}",
			"preRequestScript": "",
			"pathVariables": {},
			"method": "POST",
			"data": [],
			"dataMode": "raw",
			"version": 2,
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": {},
			"time": 1452623611445,
			"name": "transport.reset_counters",
			"description": "Resets a transports counters\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        id: String - The transport id\n    }\n    \nResponse (application/json):\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Not found\n",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"transport.reset_counters\",\n    \"params\": {\n        \"id\": \"\"\n    }\n}",
			"folder": "dfda092b-f010-8965-e971-5a5aaee5dd41"
		},
		{
			"id": "f8f941f8-6d0f-0898-5f51-1d2b64b33ef0",
			"folder": "77b4ab8c-1f16-8ea6-b7e1-afec51fedf8a",
			"name": "route.query",
			"dataMode": "raw",
			"data": [],
			"descriptionFormat": null,
			"description": "Queries the routes for a given applicaiton.\n\nHeader:\n\n    X-QWASI-API-KEY: required\n    X-QWASI-APP-ID: required\n    \nRequest (application/json):\n\n    params: {\n        proto: String - Optional, default will return all routes.\n    }\n    \nResponse (application/json):\n    \n    result: [ Array of route objects, see route.create ]\n    \n    \nReturns:\n\n    success: 200 OK\n    failure: 401 Access Denied\n             404 Application not found\n",
			"headers": "Content-Type: application/json\n",
			"method": "POST",
			"pathVariables": {},
			"url": "{{url}}",
			"preRequestScript": "",
			"tests": "",
			"currentHelper": "normal",
			"helperAttributes": "{}",
			"collectionId": "75808674-9e2b-dd77-dea5-05d36feb5a94",
			"isFromCollection": true,
			"rawModeData": "{\n    \"jsonrpc\": \"2.0\",\n    \"id\": 0,\n    \"method\": \"route.query\",\n    \"params\": {\n       \n    }\n}"
		}
	]
}