//apply plugin: 'java'
apply plugin: 'maven'
apply plugin: 'signing'
//apply plugin: 'ivy-publish'
apply plugin: 'maven-publish'
//apply plugin: 'findbugs'
//android support
buildscript {
	repositories {
		jcenter()
	}

	dependencies {
		classpath 'com.android.tools.build:gradle:1.2.3'
	}
}

allprojects{
    repositories{
		jcenter()
		maven{url "file:///Users/ccoulton/QwasiJSON"}
    }
}

//apply plugin: 'com.google.gms.google-services'
apply plugin: 'com.android.library'

android {
    compileSdkVersion 22
    buildToolsVersion '22.0.1'
	defaultConfig{
		minSdkVersion 15
		targetSdkVersion 22
	}
}

repositories{
	mavenCentral()
	jcenter()
}

dependencies {
	compile fileTree(dir: 'libs', include: ['*.jar'])
	//messaging
	compile 'com.google.android.gms:play-services-gcm:7.5.0'
	//location and Geofence
	compile 'com.google.android.gms:play-services-location:7.5.0'
	//beacons radiusnetworks
	compile 'org.altbeacon:android-beacon-library:2.3.5'
	//Json client and sending
	compile 'com.qwasi:QwasiJson:1.0.0'
}

sourceSets{
	main{
		java{
			srcDir 'src/java'
		}
		resources{
			srcDir 'src/resources'
		}
		//jsonpackage{
		//	srcFile 'package.json' }
	}
}

group = 'com.qwasi'
archivesBaseName = "QwasiSDK"
version = '2.1.4'

task sourcesJar(type: Jar) {
	from android.sourceSets.main.java.srcDirs
	classifier = 'sources'
}

task androidJavadoc(type: Javadoc) {
	include 'org.altbeacon:android-beacon-library:2.3.5'
	include 'com.qwasi:QwasiJson:1.0.0'
	include 'com.google.android.gms:play-services-gcm:7.5.0'
	include 'com.google.android.gms:play-services-location:7.50'
	source = android.sourceSets.main.java.srcDirs
	classpath += project.files(android.getBootClasspath().join(File.pathSeparator))
}

task javadoc(type: Javadoc){
	source = sourceSets.main.java.srcDirs
}

task javadocJar(type: Jar, dependsOn: androidJavadoc) {
	classifier = 'javadoc'
	from androidJavadoc.destinationDir
	from javadoc.destinationDir
}

artifacts {
	archives javadocJar
	archives sourcesJar
}

signing{
	sign configurations.archives
}

uploadArchives{
	repositories{
		mavenDeployer {
			repository(url: 'file:///Users/ccoulton/QwasiSDK')
			//beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

			//repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2")
			//		{ authentication(userName: ossrhUsername, password:ossrhPassword) }

			//snapshotRepository(url: "https://oss.sonatype.org/content/repositories/snapshots")
			//		{ authentication(userName:ossrhUsername , password: ossrhPassword ) }

			pom.project{
				name 'QwasiSDK'
				packaging 'jar'
				description 'SDK for accessing Qwasi\'s backend api for mixed method broadcasts'
				url "https://github.com/Qwasi"
				scm{
					connection 'scm:git:git@github.com:qwasi/android-sdk.git'
					developerConnection 'scm:git:git@github.com:qwasi/android-sdk.git'
					url 'https://github.com/qwasi/android-sdk'
				}
				licenses{
					license{
						name 'MIT'
						distribution 'repo'
					}
				}

				developers{
					developer{
						id 'ccoulton'
						name 'Charles Coulton'
						email 'charles.coulton@qwasi.com'
					}
					developer {
						name 'Rob Rodriguez'
						email 'rob.rodriguez@qwasi.com'
					}
				}
			}

		}
		//ivy{ url "file:///Users/ccoulton/QwasiSDK" }
	}
}